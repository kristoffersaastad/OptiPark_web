{"version":3,"sources":["images/carIcon2.png","images/node.png","images/avaliable.png","images/taken.png","forecast_data_formatted.txt","reducers/data.js","reducers/global.js","reducers/loaders.js","reducers/index.js","firebase.js","firebaseConfig.js","actions/login.js","actions/geo.js","components/SubComponents/Notify.js","components/LoginComponents/SignUp.js","components/LoginComponents/SignIn.js","components/SubComponents/StyledLink.js","components/LoginComponents/SignOut.js","components/LoginComponents/UserName.js","components/Main/Header.js","components/SubComponents/Hero.js","actions/global.js","components/Main/Home.js","components/Main/Profile.js","functions/Graph.js","functions/DirectFunctions.js","components/Main/MapComponent.js","components/Main/Contact.js","components/Main/Footer.js","components/SubComponents/Charts.js","components/Main/Statistics.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","INITIAL_STATE","login","window","localStorage","getItem","defaultState","headerBkg","parkinglot","global","state","arguments","length","undefined","action","type","Object","objectSpread","selected","payload","userPos","path","sensor","spot","loadUserPage","load","userPageSuccess","success","latlngs","loadUserName","toastMessage","message","showToast","show","toastType","combineReducers","data","assign","userInfo","json","geometry","corners","support","sensors","entrance","loaders","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fsRef","auth","fetchInfo","dispatch","collection","doc","currentUser","uid","get","then","catch","err","console","log","changeLogin","status","setTimeout","createUser","email","password","createUserWithEmailAndPassword","set","username","split","signInUser","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","signInWithEmailAndPassword","stop","_x","apply","this","signOutUser","_ref2","_callee2","_context2","signOut","_x2","getGeo","lot","JSON","parse","exists","Notify","props","value","toast","position","POSITION","BOTTOM_CENTER","TYPE","ERROR","autoClose","react_default","createElement","lib","className","Component","SignUp","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","veripassword","lp","handleChange","setState","defineProperty","target","id","popover","interactionKind","PopoverInteractionKind","CLICK","popoverClassName","Position","BOTTOM","content","onSubmit","inputGroup","placeholder","leftIcon","style","color","intent","Intent","PRIMARY","onChange","buttons","role","notify","Notify_Notify","connect","bindActionCreators","SignIn","signIn","isOpen","StyledLink","Link","textDecoration","to","React","SignOut","signout","StyledLink_StyledLink","onClick","class","UserName","spinner","size","Fragment","HOVER","rightIcon","LoginComponents_SignOut","Header","removeItem","_this2","onAuthStateChanged","user","setItem","backgroundColor","boxShadow","margin","width","LoginComponents_UserName","LoginComponents_SignIn","LoginComponents_SignUp","_state$data","_state$global","Hero","react_reveal","cascade","reducer","changeHeaderBkg","submitContactForm","topic","text","date","update","changeToaster","Home","handleMouseMove","handleScroll","scrollY","above","scroll","radioColor","scrollToRef","scrollTo","handleSetActive","divRef","addEventListener","removeEventListener","SubComponents_Hero","modules","smooth","offset","duration","onSetActive","name","Profile","objectDestructuringEmpty","Graph","noOfVertices","addVertex","v","adjList","addEdge","w","len","latlnglen","getNode","node","toConsumableArray","keys","find","item","getLength","printGraph","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","i","values","conc","forEach","return","Map","distance","from","nfrom","Math","PI","nto","r","x1","cos","x2","y1","sin","y2","z1","z2","sqrt","pow","createGraph","m","require","matrix","g","label","_loop","_loop2","j","properties","coordinates","latlngDist","calcBBox","points","ul","lr","sensorIconSize","L","Icon","iconUrl","iconSize","sensorIconAvaliable","sensorIconTaken","MapComponent","loadingMap","bbox","prevProps","prevState","progressBar","es_Map","bounds","height","TileLayer","attribution","url","map","Marker","onMouseOver","hoverMarker","key","selectSpot","icon","Redirect","Contact","topicText","Date","getTime","handleTopicChange","parseInt","handleText","radioGroup","selectedValue","inline","controls","textArea","fill","large","Footer","obj","SUCCESS","DEFAULT","Colors","DARK_GRAY5","_state$loaders","am4core","am4themes_animated","Charts","loading","predictedData","processedData","daysBackward","daysForward","oppositePredictedData","componentDidMount","fetch","data_split","date_split_spots","date_from_split","spots_from_split","push","chart","am4charts","dateAxis","xAxes","dataFields","category","renderer","grid","template","location","minGridDistance","yAxes","series","valueY","dateX","columns","propertyFields","stroke","tooltipText","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","that","assertThisInitialized","$","ajax","$limit","lot_name","$$app_token","dataFilter","mydata","pdata","startDate","endDate","setDate","getDate","dateLess","filter","d","toISOString","stringify","dataProcessed","filterData","initiateOtherCharts","chart2","paddingRight","valueAxis","tooltip","disabled","minWidth","cursor","scrollbarX","handleSubmit","loadData","raw_data","number","lastObject","spots","temp_data","getMinutes","sort","x","y","data2","dataProcessed2","dispose","marginTop","marginBottom","Form","FormGroup","controlId","FormControl","Button","variant","Statistics","SubComponents_Charts","Root","store","react_redux_es","BrowserRouter","Main_Header","Route","exact","component","Main_Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","src_Root","document","getElementById","URL","process","href","origin","concat","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de8aede9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carIcon2.3f11b963.png\";","module.exports = __webpack_public_path__ + \"static/media/node.fa336545.png\";","module.exports = __webpack_public_path__ + \"static/media/avaliable.78c14fe8.png\";","module.exports = __webpack_public_path__ + \"static/media/taken.b389ae52.png\";","module.exports = __webpack_public_path__ + \"static/media/forecast_data_formatted.5f36ebf6.txt\";","const INITIAL_STATE = {\r\n      login:window.localStorage.getItem(\"LOGIN\")!==null,\r\n};\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n    case 'USER-INFO':\r\n      return Object.assign({}, state, {\r\n        userInfo:action.payload\r\n      })\r\n    case 'LOGIN':\r\n      return Object.assign({}, state, {\r\n        login:action.payload\r\n      })\r\n    case 'GET-GEO':\r\n    return Object.assign({}, state, {\r\n      json:action.payload,\r\n      geometry:action.payload.geometry,\r\n      corners:action.payload.corners,\r\n      support:action.payload.support,\r\n      sensors:action.payload.sensors,\r\n      entrance:action.payload.entrance,\r\n    })\r\n    default:\r\n      return state;\r\n    }\r\n};","let defaultState = {\r\n    headerBkg:false,\r\n    parkinglot:\"Library\",\r\n}\r\n\r\nconst global = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET-SELECTED':\r\n            return{\r\n                ...state,\r\n                selected:action.payload,\r\n            }\r\n        case 'USER-POS':\r\n            return{\r\n                ...state,\r\n                userPos:action.payload,\r\n            }\r\n        \r\n        case 'ASSIGN-SPOT':\r\n            return{\r\n                ...state,\r\n                path:action.payload.path,\r\n                sensor:action.payload.spot,\r\n            }\r\n        case 'LOAD-USERPAGE':\r\n            return{\r\n                ...state,\r\n                loadUserPage:action.payload.load,\r\n                userPageSuccess:action.payload.success,\r\n            }\r\n        case 'SET-POLYLINE':\r\n            return{\r\n                ...state,\r\n                latlngs:action.payload\r\n            }\r\n        case 'SET-HEADER-BKG':\r\n            return{\r\n                ...state,\r\n                headerBkg:action.payload\r\n            }\r\n        \r\n        default:        \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default global;","let defaultState = {\r\n    loadUserName:true,\r\n}\r\n\r\nconst global = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN-FIELD-LOADER':\r\n            return{\r\n                ...state,\r\n                loadUserName:action.payload,\r\n            }\r\n        case 'TOASTER':        \r\n            return{\r\n                ...state,\r\n                toastMessage:action.message,\r\n                showToast:action.show,\r\n                toastType:action.toastType,\r\n            }\r\n        default:        \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default global;","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./data\";\r\nimport global from \"./global\"\r\nimport loaders from './loaders'\r\n\r\nexport default combineReducers({\r\n  data,\r\n  global,\r\n  loaders,\r\n});\r\n","import * as firebase from 'firebase';\r\nimport {config} from './firebaseConfig';\r\n\r\nfirebase.initializeApp(config);\r\nconst firestoreRef = firebase.firestore();\r\n\r\nexport const fsRef = firestoreRef;\r\nexport const auth = firebase.auth();","export const config = {\r\n    apiKey: \"AIzaSyCz2Lbfoxu59bbPKz5GaWNczSvq_I0Uh_E\",\r\n    authDomain: \"optipark-5dfe8.firebaseapp.com\",\r\n    databaseURL: \"https://optipark-5dfe8.firebaseio.com\",\r\n    projectId: \"optipark-5dfe8\",\r\n    storageBucket: \"optipark-5dfe8.appspot.com\",\r\n    messagingSenderId: \"887530230166\"\r\n}","import {auth, fsRef} from '../firebase';\r\n\r\nexport const fetchInfo = () => dispatch =>{\r\n    fsRef.collection(\"users\").doc(auth.currentUser.uid).get()\r\n        .then((doc)=>{\r\n            dispatch({\r\n                type:'USER-INFO',\r\n                payload:doc.data()\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"fetch error\",err);\r\n            \r\n        })\r\n}\r\n\r\nexport const changeLogin = (status) => dispatch =>{\r\n    dispatch({\r\n        type:'LOGIN',\r\n        payload:status,\r\n    })\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type:'LOGIN-FIELD-LOADER',\r\n            payload:null\r\n        })    \r\n    }, 1000);\r\n    \r\n}\r\n\r\nexport const createUser = (email,password) => {  \r\n    auth.createUserWithEmailAndPassword(email,password)\r\n    // .then(()=>{\r\n    //     auth.signInWithEmailAndPassword(email,password)\r\n    // })\r\n    .then(()=>{ \r\n        fsRef.collection(\"users\").doc(auth.currentUser.uid).set({\r\n            email:email,\r\n            username:email.split(\"@\")[0],\r\n            uid:auth.currentUser.uid,\r\n        })\r\n    })\r\n    .catch((err) =>{\r\n        console.log('create error',err);\r\n    });\r\n}\r\n\r\nexport const signInUser = (email,password) => async dispatch => {\r\n    auth.signInWithEmailAndPassword(email, password)\r\n    .catch((err) =>{\r\n        console.log('Signin error',err);\r\n    });\r\n  \r\n}\r\n\r\nexport const signOutUser = () => async dispatch => {\r\n    auth.signOut().then(()=>{\r\n        dispatch({\r\n            type:'USER-INFO',\r\n            payload:null,\r\n        })\r\n        dispatch({\r\n            type:'LOGIN-FIELD-LOADER',\r\n            payload:true\r\n        })\r\n    })\r\n    .catch(() =>{\r\n        console.log('Signout Error');\r\n    });\r\n}","import {fsRef} from '../firebase';\r\n\r\nexport const getGeo = (lot) => async dispatch =>{\r\n    fsRef.collection(\"parkinglots\").doc(lot).get()\r\n    .then((doc)=>{\r\n        \r\n        let json = JSON.parse(doc.data().json);\r\n        if (doc.exists) {\r\n            dispatch({            \r\n                type:'GET-GEO',\r\n                payload:json\r\n            })    \r\n        }else{\r\n            console.log(\"no such document\");\r\n            \r\n        }\r\n    }).catch(()=>console.log(\"getgeo error\"))\r\n}\r\n\r\nexport const writeGeo = (json,name) => async =>{\r\n    fsRef.collection(\"parkinglots\").doc(name).set({\r\n        json:JSON.stringify(json),\r\n        name:name,\r\n    })\r\n    .catch(()=>{\r\n        console.log(\"error\");\r\n        \r\n    })   \r\n}\r\n\r\nexport const changeUserPos = (lat, lng) => dispatch => {\r\n    dispatch({\r\n        type:'USER-POS',\r\n        payload: [lat, lng],\r\n    })\r\n}\r\n\r\nexport const assignSpot = (spot, path) => dispatch => {\r\n    dispatch({\r\n        type:'ASSIGN-SPOT',\r\n        payload: {\r\n            spot:spot,\r\n            path:path,\r\n        }\r\n    })\r\n}\r\n","import React,{ Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default class Notify extends Component{\r\n    render(){\r\n        console.log(this.props.value);\r\n        \r\n        toast(this.props.value,{\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            type:toast.TYPE.ERROR,\r\n            autoClose:1000\r\n        });\r\n        return(<ToastContainer className=\"toastUp\"/>)\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { InputGroup, Button, Intent, Popover, PopoverInteractionKind, Position } from '@blueprintjs/core';\r\nimport { createUser } from '../../actions/login';\r\nimport {toast} from 'react-toastify'\r\nimport Notify from '../SubComponents/Notify';\r\n\r\nclass SignUp extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email:\"\",\r\n            password:\"\",\r\n            veripassword:\"\",\r\n            lp:\"\",\r\n        }\r\n    }\r\n\r\n    createUser = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(this.state.password!==this.state.veripassword){\r\n            toast(\"Passwords doesn't match\",{\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                type:toast.TYPE.ERROR,\r\n                autoClose:1500\r\n            });\r\n        }else if (this.state.email===\"\"||this.state.password===\"\"||this.state.veripassword===\"\"||this.state.lp===\"\") {\r\n            toast(\"Fields are empty\",{\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                type:toast.TYPE.ERROR,\r\n                autoClose:1500\r\n            });\r\n        }else{\r\n            this.props.createUser(this.state.email,this.state.password)\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {        \r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Popover\r\n                interactionKind={PopoverInteractionKind.CLICK}\r\n                popoverClassName=\"bp3-popover-content-sizing\"\r\n                position={Position.BOTTOM}\r\n                target={<button className=\"bp3-button bp3-minimal bp3-icon-new-person\">Sign Up</button>}\r\n                content={\r\n                <form\r\n                onSubmit={this.createUser}\r\n                >\r\n                    <label className=\"bp3-label\">Sign Up</label>\r\n                    <InputGroup\r\n                        id={'email'}\r\n                        className=\"popover-input\"\r\n                        type={'email'}\r\n                        placeholder={'Email'}\r\n                        leftIcon={\"user\"}\r\n                        style={{color:'white'}}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.email}\r\n                        />\r\n                    <InputGroup\r\n                        id={'password'}\r\n                        className=\"popover-input\"\r\n                        type={'password'}\r\n                        leftIcon={\"lock\"}\r\n                        placeholder={\"Password\"}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                    />\r\n                    <InputGroup\r\n                        id={'veripassword'}\r\n                        className=\"popover-input\"\r\n                        type={'password'}\r\n                        leftIcon={\"lock\"}\r\n                        placeholder={\"Verify password\"}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.veripassword}\r\n                    />\r\n                    <InputGroup\r\n                        id={'lp'}\r\n                        className=\"popover-input\"\r\n                        type={'text'}\r\n                        leftIcon={\"drive-time\"}\r\n                        placeholder={\"License plate\"}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.lp}\r\n                    />\r\n                <Button type=\"submit\" role=\"button\">Create</Button>\r\n                {this.state.notify?<Notify value=\"Password does not match\"/>:null}\r\n                </form>\r\n                }\r\n            />\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { login } = state.data;\r\n    return {\r\n        login\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ createUser }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { InputGroup, Button, Intent, Popover, PopoverInteractionKind, Position } from '@blueprintjs/core';\r\n\r\nimport { signInUser } from '../../actions/login';\r\n\r\nclass SignIn extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen:false,\r\n            email:\"\",\r\n            password:\"\",\r\n        }\r\n    }\r\n\r\n    signIn = (e) => {\r\n        e.preventDefault();\r\n        this.props.signInUser(this.state.email, this.state.password);\r\n    }\r\n\r\n    handleChange = (e) => {        \r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Popover\r\n                interactionKind={PopoverInteractionKind.CLICK}\r\n                popoverClassName=\"bp3-popover-content-sizing\"\r\n                position={Position.BOTTOM}\r\n                target={<button className=\"bp3-button bp3-minimal bp3-icon-log-in\">Log In</button>}\r\n                content={\r\n                <form onSubmit={this.signIn}>\r\n                    <label className=\"bp3-label\">Sign In</label>\r\n                    <InputGroup\r\n                        id={'email'}\r\n                        className=\"popover-input\"\r\n                        type={'email'}\r\n                        placeholder={'Email'}\r\n                        leftIcon={\"user\"}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.email}\r\n                        />\r\n                    <InputGroup\r\n                        id={'password'}\r\n                        className=\"popover-input\"\r\n                        type={'password'}\r\n                        leftIcon={\"lock\"}\r\n                        placeholder={\"Password\"}\r\n                        intent={Intent.PRIMARY}\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                    /> \r\n                    <Button type=\"submit\" role=\"button\">Sign in</Button>\r\n                </form>\r\n                }\r\n            />\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { login } = state.data;\r\n    return {\r\n        login\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ signInUser }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default class StyledLink extends React.Component{\r\n    render(){\r\n        return(\r\n            <Link style={{textDecoration:'none',color:'#e3e6e4'}} to={this.props.to}>{this.props.content}</Link>\r\n        )}\r\n\r\n}","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport StyledLink from '../SubComponents/StyledLink';\r\n\r\nimport {signOutUser} from '../../actions/login'\r\n\r\nclass SignOut extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    signout = () => {\r\n        this.props.signOutUser();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <StyledLink onClick={this.signout} to=\"/\" content={<button class=\"bp3-button bp3-minimal bp3-icon-log-out\" onClick={this.signout}>Logout</button>}/>\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    return {\r\n        \r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ signOutUser }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignOut);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport StyledLink from '../SubComponents/StyledLink';\r\nimport { Popover, PopoverInteractionKind, Position , Button, Spinner} from '@blueprintjs/core';\r\nimport SignOut from './SignOut';\r\n\r\nclass UserName extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.props.loadUserName?\r\n            <Spinner size={25}/>:\r\n            <React.Fragment>\r\n                    <StyledLink to=\"/map\" content={<button className=\"bp3-button bp3-minimal bp3-icon-map\">Map</button>}/>\r\n                    <Popover\r\n                        className=\"profile-options\"\r\n                        interactionKind={PopoverInteractionKind.HOVER}\r\n                        popoverClassName=\"bp3-popover-content-sizing\"                \r\n                        position={Position.BOTTOM}\r\n                        target={<Button rightIcon={\"cog\"} className=\"bp3-button bp3-minimal\">{this.props.userInfo.username}</Button>}\r\n                        content={\r\n                            <div className=\"flex flex-column\">\r\n                                <StyledLink to=\"/profile\" content={<div className=\"bp3-button bp3-minimal bp3-icon-user\">Profile</div>}/>\r\n                                <SignOut/>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </React.Fragment>\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { userInfo } = state.data;\r\n    const { loadUserName } = state.loaders;\r\n    return {\r\n        userInfo,\r\n        loadUserName,\r\n\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserName);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {auth} from '../../firebase';\r\nimport { fetchInfo, changeLogin } from '../../actions/login'\r\nimport { getGeo } from '../../actions/geo';\r\nimport SignUp from '../LoginComponents/SignUp'\r\nimport SignIn from '../LoginComponents/SignIn'\r\nimport StyledLink from '../SubComponents/StyledLink'\r\nimport UserName from '../LoginComponents/UserName';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    \r\n    componentWillMount(){      \r\n        this.props.getGeo(this.props.parkinglot)\r\n        window.localStorage.removeItem(\"LOGIN\")\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        auth.onAuthStateChanged((user)=>{            \r\n            if (user) {                \r\n                this.props.changeLogin(true);\r\n                window.localStorage.setItem(\"LOGIN\",\"yes\")\r\n                this.props.fetchInfo();\r\n                \r\n            }else{\r\n                this.props.changeLogin(false);\r\n                window.localStorage.removeItem(\"LOGIN\")\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"bp3-navbar bp3-dark\" style={this.props.headerBkg?{backgroundColor:'rgba(0,0,0,0)', boxShadow:'none'}:{backgroundColor:'',boxShadow:''}}>\r\n                <div style={{margin: '0 auto', width: '100%'}}>\r\n                    <div className=\"bp3-navbar-group bp3-align-left\">\r\n                        <div className=\"bp3-navbar-heading\">OptiPark</div>\r\n                    </div>\r\n                    <div className=\"bp3-navbar-group bp3-align-right\">\r\n                        <StyledLink to=\"/\" content={<button className=\"bp3-button bp3-minimal bp3-icon-home\">Home</button>}/>\r\n                        <StyledLink to=\"/statistics\" content={<button className=\"bp3-button bp3-minimal bp3-icon-chart\">Statistics</button>}/>\r\n                        <StyledLink to=\"/contact\" content={<button className=\"bp3-button bp3-minimal bp3-icon-annotation\">Contact</button>}/>\r\n\r\n                        <span className=\"bp3-navbar-divider\"></span>\r\n                        {this.props.login&&this.props.userInfo?\r\n                        <React.Fragment>\r\n                            <UserName/>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <SignIn/>\r\n                            <SignUp/>\r\n                        </React.Fragment>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { login, userInfo } = state.data;\r\n    const { headerBkg, parkinglot } = state.global\r\n    \r\n    return {\r\n        login,\r\n        userInfo,\r\n        headerBkg,\r\n        parkinglot\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ fetchInfo, changeLogin, getGeo }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {Fade} from 'react-reveal'\r\n\r\n\r\nclass Hero extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"hero\"></div>\r\n                <Fade cascade>\r\n                    <div className=\"hero-text\">\r\n                        <div className=\"title-text\"><b><span style={{color:'#4580E6'}}>Opti</span>Park</b></div>\r\n                        <div className=\"title-subtext\">Parking made easy</div>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (reducer) => {    \r\n    const {login} = reducer.data;\r\n      return {\r\n          login:login\r\n      }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({}, dispatch);\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Hero);\r\n  \r\n\r\n","import {fsRef} from '../firebase'\r\n\r\nexport const changeHeaderBkg = (status) => dispatch => {\r\n    dispatch({\r\n        type:'SET-HEADER-BKG',\r\n        payload:status,\r\n    })\r\n}\r\n\r\nexport const submitContactForm = (email, topic, text, date) =>async  dispatch=>{\r\n    fsRef.collection(\"contactForms\").doc(topic).update({\r\n        [date+\"-\"+email]:{\r\n            email:email,\r\n            text:text,\r\n            date:date,\r\n        }\r\n    }).then(()=>{\r\n        dispatch(changeToaster(\"Thank you for your request\",true, \"success\"))\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(\"CONTACT-FORM-ERROR\",err);\r\n        dispatch(changeToaster(\"Error submitting your contact request\",true, \"error\"))\r\n       \r\n    })\r\n}\r\n\r\nexport const changeToaster = (message, show, toastType) => dispatch =>{\r\n    dispatch({\r\n        type:'TOASTER',\r\n        message, show, toastType\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nimport {Fade} from 'react-reveal'\r\nimport Hero from '../SubComponents/Hero';\r\nimport { changeHeaderBkg } from '../../actions/global';\r\nimport { Icon } from '@blueprintjs/core';\r\n\r\n\r\nclass Home extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            divRef:1,\r\n            scroll:0,\r\n            radioColor:'white',\r\n            above:true,\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.changeHeaderBkg(true)\r\n        window.addEventListener('scroll', this.handleScroll)\r\n        window.addEventListener('mousemove',this.handleMouseMove)\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.changeHeaderBkg(false)\r\n        window.removeEventListener('scroll', this.handleScroll)\r\n        window.removeEventListener('mousemove',this.handleMouseMove)\r\n\r\n    }\r\n\r\n    handleMouseMove = (e) => {\r\n        console.log(e);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        if (window.scrollY>200&&this.state.above) {\r\n            this.setState({scroll:window.scrollY, radioColor:'rgb(57, 75, 89)',above:!this.state.above})\r\n        }\r\n        if (window.scrollY<200&&!this.state.above) {\r\n            this.setState({scroll:window.scrollY, radioColor:'white', above:!this.state.above})            \r\n        }\r\n    }\r\n\r\n    scrollToRef = (e) => {\r\n        window.scrollTo(0, 1);\r\n    }\r\n\r\n    handleSetActive = (to) => {\r\n        console.log(\"click\");\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"home-container\">\r\n            <Hero/>\r\n            <div className=\"radio-selectors\">\r\n                <Link className=\"radio-selectors-item\" style={{backgroundColor:this.state.radioColor}} smooth to={\"div0\"} offset={-150} duration={500} onSetActive={this.handleSetActive}></Link>\r\n                <Link className=\"radio-selectors-item\" style={{backgroundColor:this.state.radioColor}} smooth to={\"div1\"} offset={-150} duration={500} onSetActive={this.handleSetActive}></Link>\r\n                <Link className=\"radio-selectors-item\" style={{backgroundColor:this.state.radioColor}} smooth to={\"div2\"} offset={-150} duration={500} onSetActive={this.handleSetActive}></Link>\r\n            </div>\r\n            <div className=\"sub-container-home\">\r\n                <Element className=\"text-container-home\" name=\"div0\">Test</Element>\r\n                <Element className=\"text-container-home\" name=\"div1\">Test</Element>\r\n                <Element className=\"text-container-home\" name=\"div2\">Test</Element>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { headerBkg } = state.global;\r\n    return {\r\n        headerBkg\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ changeHeaderBkg }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Profile extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                Profile\r\n            </div>\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { } = state;\r\n    return {\r\n        \r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","class Graph{\r\n\r\n    constructor(noOfVertices){\r\n        this.noOfVertices = noOfVertices;\r\n        this.adjList = new Map();\r\n        \r\n    }\r\n\r\n    addVertex = (v)=>{\r\n        \r\n        this.adjList.set(v,{})        \r\n    }\r\n\r\n    addEdge = (v,w, len, latlnglen) => {\r\n        this.adjList.get(v)[w] = {len, latlnglen};\r\n    }\r\n\r\n    getNode = (node) =>{\r\n        return [...this.adjList.keys()].find((item)=>item=== node);\r\n    }\r\n\r\n    // getNodeValue = (node) => {\r\n    //     return this.adjList.get(node);\r\n    // }\r\n\r\n    getLength = () => {\r\n        return this.adjList.size;\r\n    }\r\n\r\n    printGraph = () => {\r\n        let keys = this.adjList.keys();\r\n        \r\n        for (let i of keys) {            \r\n            let values = this.adjList.get(i);\r\n            let conc = \"\";\r\n\r\n            Object.keys(values).forEach((item)=>{\r\n                conc+=item+\", \";\r\n            })\r\n            console.log(i + \" -> \" + conc);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Graph;","import Graph from './Graph'\r\n\r\nexport const latlngDist = (from, to) => {\r\n    return Math.sqrt(Math.pow(from[0]-to[0],2)+Math.pow(from[1]-to[1],2))\r\n}\r\n\r\nexport const distance = (from, to) =>{\r\n    \r\n    let nfrom = [from[0]*Math.PI/180, from[1]*Math.PI/180];\r\n    let nto  = [to[0]*Math.PI/180,to[1]*Math.PI/180];\r\n\r\n    let r = 6371*1000;\r\n    let x1 = r*Math.cos(nfrom[0])*Math.cos(nfrom[1]);\r\n    let x2 = r*Math.cos(nto[0])*Math.cos(nto[1]);\r\n    let y1 = r*Math.cos(nfrom[0])*Math.sin(nfrom[1]);\r\n    let y2 = r*Math.cos(nto[0])*Math.sin(nto[1]);\r\n    let z1 = r*Math.sin(nfrom[0]);\r\n    let z2 = r*Math.sin(nto[0]);\r\n    \r\n    return Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2)+Math.pow(z1-z2,2));\r\n}\r\n\r\nconst lowestCostNode = (costs,processed) => {\r\n    return Object.keys(costs).reduce((lowest, node)=>{\r\n        \r\n        if (lowest===null||costs[node].len < costs[lowest].len) {\r\n            if(!processed.includes(node)){\r\n                lowest = node;\r\n            }\r\n        }\r\n        return lowest;\r\n    },null);\r\n}\r\n\r\n\r\nexport const dijkstra = (g, start, finish) => {\r\n    \r\n    let start_node = g.adjList.get(start);\r\n    let costs = Object.assign({[finish]:{len:Math.pow(10,1000)}},start_node);\r\n    let parents = {[finish]:null};\r\n    \r\n    for (let child in start_node) {\r\n        parents[child] = start\r\n    }\r\n    \r\n    let processed = [];\r\n    let node = lowestCostNode(costs,processed);\r\n\r\n    while(node){\r\n        let cost = costs[node].len;\r\n        let children = g.adjList.get(node);\r\n        \r\n        for (let n in children) {\r\n            let newCost = cost+children[n].len;\r\n            \r\n            if (!costs[n]) {\r\n                \r\n                costs[n] = {len:newCost}\r\n                parents[n] = node;\r\n            }\r\n            if (costs[n].len > newCost) {\r\n                costs[n].len = newCost\r\n                parents[n] = node;\r\n            }\r\n        }\r\n        processed.push(node)\r\n        node = lowestCostNode(costs,processed)\r\n    }\r\n    \r\n    let parent = parents[finish];\r\n    let optimalPath = [[finish,costs[parent].len]];\r\n    while(parent){\r\n        if (costs[parent]) {\r\n            optimalPath.push([parent,costs[parent].len]);    \r\n        }else{\r\n            optimalPath.push([parent,0])\r\n        }\r\n        parent = parents[parent];\r\n    }\r\n\r\n    optimalPath.reverse();\r\n\r\n    const results = {\r\n        distance: costs[finish].len,\r\n        path:optimalPath,\r\n    }\r\n    \r\n    return results;\r\n}\r\n\r\nexport const getClosest = (coord, nodes) => {\r\n    let min = Math.pow(10,1000);\r\n    let closest = \"\";\r\n    Object.keys(nodes).forEach(item=>{\r\n        let node_coord = nodes[item].geometry.coordinates;\r\n        let dist = distance(coord,node_coord);\r\n        if (dist<min) {\r\n            min = dist;\r\n            closest = nodes[item].properties.name;\r\n        }\r\n    })\r\n    return [closest, min];\r\n}\r\n\r\nexport const createJSON = (corners, data,sensors, support, max, entrance, floors) => {\r\n    let json = {\r\n        entrance:[],\r\n        properties:{},\r\n        sensors:{},\r\n        support:{},\r\n    };\r\n    let num_spots = max;\r\n    let num_avaliable = max;\r\n    let status_array = new Array(num_spots).fill(0);\r\n    let processed = [];\r\n    //Updating status of random spots to 1\r\n    for (let i = 0; i < Math.floor(max/2); i++) {\r\n        let rand_index = Math.floor(Math.random()*status_array.length);\r\n        if (!processed.includes(rand_index)) {\r\n            status_array[rand_index] = 1;\r\n            processed.push(rand_index);\r\n            num_avaliable-=1;\r\n        }\r\n    }\r\n    //Setting init lot values\r\n    json.entrance = entrance;\r\n    json.corners = corners;\r\n    json.properties.name = data[1];\r\n    json.properties.floors = floors;\r\n    json.properties.total = num_spots;\r\n    json.properties.avaliable = num_avaliable;\r\n    \r\n    //Adding sensors\r\n    for (let i = 0; i < sensors.length; i++) {\r\n        json.sensors = {\r\n            ...json.sensors,\r\n            [i]:{\r\n                type:\"sensor\",\r\n                properties:{\r\n                    status:status_array[i],\r\n                    floor:1,\r\n                    name:\"s\"+i,\r\n                },\r\n                geometry:{\r\n                    coordinates: sensors[i],\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Adding support nodes\r\n    for (let i = 0; i < support.length; i++) {\r\n        json.support = {\r\n            ...json.support,\r\n            [i]:{\r\n                type:\"support\",\r\n                properties:{\r\n                    floor:1,\r\n                    name:\"h\"+i,\r\n                },\r\n                geometry:{\r\n                    coordinates: support[i],\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    return json;\r\n}\r\n\r\n\r\nexport const assignSensor = (g, sensors, support, userPos) =>{\r\n        //USE getCurrentPos as input parameter in addUserPosGraph or something when used in app        \r\n        //using entrance as startpoint now\r\n        \r\n        addUserPosGraph(g, userPos, support);\r\n        \r\n        let min_dist = Math.pow(10,1000);\r\n        let sensor = \"\";\r\n        let path = [];\r\n        Object.keys(sensors).forEach((key)=>{\r\n            if (sensors[key].properties.status===0) {\r\n                \r\n                let dijskt = dijkstra(g, g.getNode(\"userPos\"), g.getNode(sensors[key].properties.name));\r\n                let dist = dijskt.distance;\r\n                \r\n                if (dist<min_dist) {\r\n                    min_dist = dist;\r\n                    sensor = sensors[key].properties.name;\r\n                    path = dijskt.path;\r\n                }\r\n            }\r\n        })\r\n        \r\n        // let sensor_coord = sensors[Object.keys(sensors).find((item)=>sensors[item].properties.name===sensor)].geometry.coordinates;\r\n\r\n        // if (path.length>4) {\r\n\r\n        //     let c1 = support[Object.keys(support).find((item)=>support[item].properties.name===path[1][0])].geometry.coordinates;\r\n        //     let c2 = support[Object.keys(support).find((item)=>support[item].properties.name===path[2][0])].geometry.coordinates;    \r\n        //     if (distance(c1,sensor_coord)>distance(c2,sensor_coord)) {\r\n        //         path[2][1] = path[2][1]-path[1][1];\r\n        //         path.splice(1,1);\r\n        //     }\r\n        // }\r\n        return [sensor, path];\r\n}\r\nconst addUserPosGraph = (g, pos, support) => {\r\n    \r\n    let closest = getClosest(pos, support);\r\n    g.addVertex(\"userPos\");\r\n    g.addEdge(\"userPos\",closest[0],closest[1],\"\");\r\n}\r\n\r\nexport const createGraph = (sensors, support) => {\r\n    let m = require(\"../adj_matrix.json\");\r\n    m = m.matrix;      \r\n    let g = new Graph();\r\n    let label = m[0];\r\n    for (let i = 1; i < label.length; i++) {\r\n        g.addVertex(label[i]);\r\n    }\r\n    \r\n    for (let i = 1; i < m.length; i++) {\r\n        for (let j = 1; j < m[i].length; j++) {\r\n            if(m[i][j]===1){\r\n                let from = 0;\r\n                let to  = 0;\r\n                \r\n                if(label[i].split(\"\")[0]==='h'){\r\n                    Object.keys(support).forEach(item=>{\r\n                        if (support[item].properties.name===label[i]) {\r\n                            from = support[item].geometry.coordinates;\r\n                        }\r\n                    })\r\n                }\r\n                if(label[j].split(\"\")[0]==='h'){\r\n                    Object.keys(support).forEach(item=>{\r\n                        if (support[item].properties.name===label[j]) {\r\n                            to = support[item].geometry.coordinates;\r\n                        }\r\n                    })\r\n                }\r\n                if(label[i].split(\"\")[0]==='s'){\r\n                    Object.keys(sensors).forEach(item=>{\r\n                        if (sensors[item].properties.name===label[i]) {\r\n                            from = sensors[item].geometry.coordinates;\r\n                        }\r\n                    })\r\n                }\r\n                if(label[j].split(\"\")[0]==='s'){\r\n                    Object.keys(sensors).forEach(item=>{\r\n                        if (sensors[item].properties.name===label[j]) {\r\n                            to = sensors[item].geometry.coordinates;\r\n                        }\r\n                    })\r\n                }\r\n                g.addEdge(label[i],label[j],distance(from,to), latlngDist(from,to))\r\n            }\r\n        }\r\n    }\r\n    console.log(g);\r\n    \r\n    return g;\r\n}\r\n\r\nexport const getPolyline  = (userPos,path, sensors, support) =>{\r\n    let polyline = [];\r\n    polyline.push(userPos);\r\n    Object.keys(path).forEach((item)=>{\r\n        if (path[item][0].split(\"\")[0]===\"s\") {\r\n            Object.keys(sensors).find((key)=>{\r\n                if (sensors[key].properties.name===path[item][0]) {\r\n                    polyline.push(sensors[key].geometry.coordinates);\r\n                }\r\n                return null;\r\n            })\r\n        }\r\n        if (path[item][0].split(\"\")[0]===\"h\") {\r\n            Object.keys(support).find((key)=>{\r\n                if (support[key].properties.name===path[item][0]) {\r\n                    polyline.push(support[key].geometry.coordinates);\r\n                }\r\n                return null;\r\n            })\r\n        }\r\n    })\r\n    return polyline;\r\n    \r\n}\r\n\r\nexport const calcBBox = (points) =>{\r\n    let ul = [Math.pow(10, 1000),-Math.pow(10, 1000)];\r\n    let lr = [-Math.pow(10, 1000),Math.pow(10, 1000)];\r\n    Object.keys(points).forEach((item)=>{\r\n        if (points[item][0]<ul[0]) {\r\n            ul[0] = points[item][0]\r\n        }\r\n        if (points[item][0]>lr[0]) {\r\n            lr[0] = points[item][0]\r\n        }\r\n        if (points[item][1]>ul[1]) {\r\n            ul[1] = points[item][1]\r\n        }\r\n        if (points[item][1]<lr[1]) {\r\n            lr[1] = points[item][1]\r\n        }\r\n    })        \r\n    return [ul, lr];\r\n}","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Map, TileLayer, Marker, Polyline} from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { calcBBox, createGraph } from '../../functions/DirectFunctions';\r\nimport { ProgressBar } from '@blueprintjs/core'\r\n\r\nconst userIcon = new L.Icon({\r\n    iconUrl:require('../../images/carIcon2.png'),\r\n    iconSize:[30,30],\r\n})\r\n\r\nconst nodeIcon = new L.Icon({\r\n    iconUrl:require('../../images/node.png'),\r\n    iconSize:[10,10],\r\n})\r\n\r\nconst sensorIconSize = [15,15];\r\n\r\nconst sensorIconAvaliable = new L.Icon({\r\n    iconUrl:require('../../images/avaliable.png'),\r\n    iconSize:sensorIconSize,\r\n});\r\n\r\nconst sensorIconTaken = new L.Icon({\r\n    iconUrl:require('../../images/taken.png'),\r\n    iconSize:sensorIconSize,\r\n});\r\n\r\nclass MapComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadingMap:true,\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.sensors&&this.props.support&&this.props.corners)this.setState({g:createGraph(this.props.sensors, this.props.support),bbox: calcBBox(this.props.corners), loadingMap:!this.state.loadingMap})        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.sensors!==this.props.sensors) {\r\n            if(this.props.sensors&&this.props.support&&this.props.corners)this.setState({g:createGraph(this.props.sensors, this.props.support),bbox: calcBBox(this.props.corners), loadingMap:!this.state.loadingMap})        \r\n        }\r\n    }\r\n\r\n    render(){\r\n        if (!this.props.login) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return(\r\n        <div className=\"map-container\">\r\n            {this.state.loadingMap?\r\n            <div className=\"progressBar\">Loading map<ProgressBar/></div>\r\n            :<Map bounds={this.state.bbox} style={{width:\"100%\", height:'100%'}}>\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {Object.keys(this.props.sensors).map((item)=>\r\n                    <Marker onMouseOver={this.hoverMarker} id={this.props.sensors[item].properties.name} key={item} onClick={this.selectSpot} position={[this.props.sensors[item].geometry.coordinates[0],this.props.sensors[item].geometry.coordinates[1]]} icon={this.props.sensors[item].properties.status===0?sensorIconAvaliable:sensorIconTaken}></Marker>\r\n                )}\r\n            </Map>}\r\n        </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { login, userInfo, support, sensors, corners } = state.data;\r\n    return {\r\n        login,\r\n        userInfo,\r\n        support,\r\n        sensors,\r\n        corners\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapComponent);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {TextArea, InputGroup, Radio, RadioGroup, Button} from '@blueprintjs/core'\r\nimport { submitContactForm } from '../../actions/global';\r\n\r\nclass Contact extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            text : \"\",\r\n            topic:1,\r\n            topicText:\"Bug\",\r\n            email:\"\",\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if (this.props.userInfo) {\r\n            this.setState({email:this.props.userInfo.email})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.userInfo!==this.props.userInfo) {\r\n            this.setState({email:this.props.userInfo.email})\r\n        }\r\n    }\r\n\r\n    submitContactForm = () => {\r\n        if(!this.props.showToast){\r\n            this.props.submitContactForm(this.state.email, this.state.topicText, this.state.text, new Date().getTime())        \r\n            this.setState({\r\n                text : \"\",\r\n                topic:1,\r\n                topicText:\"Bug\",\r\n                email:\"\",\r\n            })\r\n        }\r\n    }\r\n\r\n    handleTopicChange = (e) => {             \r\n        this.setState({topic:parseInt(e.target.value),topicText:e.target.label})\r\n    }\r\n\r\n    handleText = (e) => {\r\n        this.setState({[e.target.id]:e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container contact-container flex\">\r\n            <div className=\"info-container equal-child\">\r\n                <h4>Contact info</h4>\r\n                {/* <hr/> */}\r\n                <div>Address:</div>\r\n                <i className=\"\">Univercity of California, Santa Barbara, 93117 Goleta</i>\r\n                <div>Mobile:</div>\r\n                <i>+1 111 222 3344</i>\r\n                <hr/>\r\n                <div className=\"\">Opening Hours:</div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Mon: </div><div className=\"oh-hour\">10:00am-5:00pm</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Tue: </div><div className=\"oh-hour\">10:00am-5:00pm</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Wed: </div><div className=\"oh-hour\">10:00am-5:00pm</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Thu: </div><div className=\"oh-hour\">10:00am-5:00pm</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Fri: </div><div className=\"oh-hour\">10:00am-5:00pm</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Sat: </div><div className=\"oh-hour\" style={{color:'red'}}>Closed</div></div>\r\n                <div className=\"opening-hours flex\"><div className=\"oh-day\">Sun: </div><div className=\"oh-hour\" style={{color:'red'}}>Closed</div></div>\r\n                <hr/>\r\n            </div>\r\n            <span className=\"bp3-navbar-divider\"></span>\r\n            <div className=\"contact-form-container\">\r\n                <h3>Contact Form</h3>\r\n                <RadioGroup\r\n                    name=\"Choose topic\"\r\n                    onChange={this.handleTopicChange}\r\n                    selectedValue={this.state.topic}\r\n                    inline\r\n                >\r\n                    <Radio label=\"Bug\" value={1}/>\r\n                    <Radio label=\"Question\" value={2} />\r\n                    <Radio label=\"Other..\" value={3} />\r\n                </RadioGroup>\r\n                <InputGroup\r\n                    id={\"email\"}\r\n                    className=\"contact-email-input\"\r\n                    value = {this.state.email}\r\n                    onChange = {this.handleText}\r\n                    placeholder=\"Enter email\"\r\n                />\r\n                <TextArea\r\n                    id={\"text\"}\r\n                    className=\"contact-text\"\r\n                    onChange={this.handleText}\r\n                    value={this.state.text}\r\n                    fill={true}\r\n                    large\r\n                />\r\n                <Button type=\"\" onClick={this.submitContactForm}>Submit form</Button>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { userInfo } = state.data;\r\n    const { showToast } = state.loaders\r\n    return {\r\n        userInfo,\r\n        showToast,\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ submitContactForm }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport { Colors } from '@blueprintjs/core';\r\nimport { changeToaster } from '../../actions/global';\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.showToast!==this.props.showToast) {\r\n            if (this.props.showToast) {\r\n                let toastType = this.props.toastType;\r\n                let obj = {\r\n                    autoClose:1500,\r\n                    position: toast.POSITION.BOTTOM_CENTER,\r\n                }\r\n                if (toastType===\"success\") {\r\n                    obj.type = toast.TYPE.SUCCESS;\r\n                }\r\n                if (toastType===\"error\") {\r\n                    obj.type = toast.TYPE.SUCCESS;\r\n                }\r\n                if(toastType===\"default\"){\r\n                    obj.type = toast.TYPE.DEFAULT;\r\n                }\r\n                toast(this.props.toastMessage,obj)\r\n                setTimeout(() => {\r\n                    this.props.changeToaster(\"\",false,\"\")\r\n                }, 1500);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"footer\" style={{backgroundColor:Colors.DARK_GRAY5, height:'50px'}}>\r\n            <ToastContainer/>\r\n        </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    const { showToast, toastMessage, toastType } = state.loaders;\r\n    return {\r\n        showToast,\r\n        toastMessage,\r\n        toastType,\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ changeToaster }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","import React, { Component } from 'react';\r\nimport {Form, FormControl, FormGroup, Button} from 'react-bootstrap';\r\nimport $ from 'jquery';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\n\r\nclass Charts extends Component {\r\n  state = {\r\n    loading: true,\r\n    predictedData: [],\r\n    processedData: [],\r\n    daysBackward: 1,\r\n    daysForward: 1,\r\n    oppositePredictedData: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let predictedData = [];\r\n    let oppositePredictedData = [];\r\n    fetch(require('../../forecast_data_formatted.txt')).then((r) => r.text()).then((text => {\r\n      //console.log(text.split(','));\r\n      let data_split = text.split('\\n');\r\n      for (let i = 0; i < data_split.length; i++) {\r\n        if (data_split[i].length > 0) {\r\n          let date_split_spots = data_split[i].split(',');\r\n          let date_from_split = new Date(date_split_spots[0]);\r\n          let spots_from_split = 532 - parseInt(date_split_spots[1]);\r\n          //console.log(new Date(date_from_split))\r\n          predictedData.push({ date: date_from_split, value: spots_from_split, color: '#7dabf4' })\r\n          oppositePredictedData.push({ date: date_from_split, value: (532-spots_from_split), color: '#7dabf4' })\r\n          //console.log(spots_from_split)\r\n        }\r\n\r\n      }\r\n      this.setState({\r\n        predictedData: predictedData,\r\n        oppositePredictedData: oppositePredictedData,\r\n      })\r\n      //predictedData.push({date: new Date(), spots: text.split(\",\")[1]})\r\n    }))\r\n\r\n\r\n    //column\r\n    //am4core.useTheme(kelly);\r\n    am4core.useTheme(am4themes_animated);\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    var chart = am4core.create(\"chartdiv\", am4charts.XYChart3D);\r\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.dataFields.category = \"date\";\r\n    dateAxis.renderer.grid.template.location = 0;\r\n    dateAxis.renderer.minGridDistance = 40;\r\n\r\n\r\n\r\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n\r\n    // Create series\r\n    var series = chart.series.push(new am4charts.ColumnSeries());\r\n    series.dataFields.valueY = \"value\";\r\n    series.dataFields.dateX = \"date\";\r\n    series.columns.template.propertyFields.fill = \"color\";\r\n    series.columns.template.propertyFields.stroke = \"color\";\r\n    series.name = \"Visits\";\r\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\r\n    series.columns.template.fillOpacity = .8;\r\n    var columnTemplate = series.columns.template;\r\n    columnTemplate.strokeWidth = 2;\r\n    columnTemplate.strokeOpacity = 1;\r\n\r\n    var that = this;\r\n\r\n\r\n    // AJAX QUERY\r\n\r\n    $.ajax({\r\n      url: \"https://data.smgov.net/resource/tce2-7ir6.json\",\r\n      type: \"GET\",\r\n      data: {\r\n        \"$limit\": 100000,\r\n        \"lot_name\": \"Library\",\r\n        \"$$app_token\": \"Ul8sMHNswBDXCzvlAxpqI6x1Q\",\r\n      },\r\n      dataFilter: function (mydata) {\r\n        var pdata = JSON.parse(mydata);\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        startDate.setDate(startDate.getDate() - 1);\r\n        //var startDate = new Date(\"2019-01-01 23:00:00\");// hard coded :)\r\n        var dateLess = pdata.filter(function (r) {\r\n          //console.log(\"r\",r.date);// each date\r\n          var d = new Date(r['date_time']);\r\n\r\n          return (d.toISOString() >= startDate.toISOString() && d.toISOString() <= endDate.toISOString());\r\n        });\r\n        return JSON.stringify(dateLess);//filtered data\r\n      }\r\n\r\n    }).done(function (data) {\r\n      //alert(\"Retrieved \" + data.length + \" records from the dataset!\");\r\n      let dataProcessed = that.filterData(data, 0);\r\n      chart.data = dataProcessed;\r\n      that.chart = chart;\r\n      that.setState({\r\n        loading: false,\r\n        processedData: dataProcessed,\r\n      })\r\n      that.initiateOtherCharts(data)\r\n    })\r\n  }\r\n\r\n\r\n  initiateOtherCharts = (data) => {\r\n    let chart2 = am4core.create(\"chartdiv2\", am4charts.XYChart);\r\n\r\n\r\n    chart2.paddingRight = 20;\r\n\r\n    // standard stuff\r\n    let dateAxis = chart2.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = chart2.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = chart2.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"value\";\r\n\r\n    series.tooltipText = \"{valueY.value}\";\r\n    chart2.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    chart2.scrollbarX = scrollbarX;\r\n\r\n    chart2.data = this.filterData(data, 1);\r\n    this.chart2 = chart2;\r\n\r\n  }\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // MAKE SURE LISTS IT NOT EMPTY WHEN TRYING TO CREATE\r\n    this.loadData();\r\n    // add to the list here\r\n    // console.log(this.state);\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  filterData = (raw_data, number) => {\r\n    if (number === 0) {\r\n      let data = [];\r\n      for (let i = 0; i < raw_data.length; i++) {\r\n        let spots = 532 - parseInt(raw_data[i]['available_spaces'])\r\n        let temp_data = raw_data[i]['date_time']\r\n        if (new Date(temp_data).getMinutes() === 0) {\r\n          data.push({ date: new Date(temp_data), value: spots, color: \"#4181e7\" })\r\n  \r\n        }\r\n  \r\n      }\r\n      data[data.length - 1][\"color\"] = \"#d02878\";\r\n  \r\n      //let sd = [{ date: new Date(2018,11,24), nu: 4}, { date: new Date(2018,11,22), nu: 2}, { date: new Date(2018,11,26), nu: 3}]\r\n      //console.log(sd);\r\n  \r\n      data.sort(function (x, y) { return new Date(x['date']).getTime() - new Date(y['date']).getTime() })\r\n      let lastObject;\r\n      if (data.length > 0) {\r\n        lastObject = data[data.length - 1];\r\n      }\r\n      let endDate = new Date();\r\n      endDate.setDate(lastObject[\"date\"].getDate() + parseInt(this.state.daysForward));\r\n      for (let j = 0; j < this.state.predictedData.length; j++) {\r\n        if ((this.state.predictedData[j][\"date\"] > lastObject[\"date\"]) && this.state.predictedData[j][\"date\"] <= endDate) {\r\n          if (this.state.predictedData[j][\"date\"].getMinutes() === 0) {\r\n            data.push((this.state.predictedData[j]))\r\n          }\r\n        }\r\n      }\r\n  \r\n  \r\n      return data\r\n    } else {\r\n      let data2 = [];\r\n      \r\n    for (let i = 0; i < raw_data.length; i++) {\r\n      let spots = parseInt(raw_data[i]['available_spaces'])\r\n      let temp_data = raw_data[i]['date_time']\r\n        data2.push({ date: new Date(temp_data), value: spots, color: \"#4181e7\" })\r\n\r\n\r\n    }\r\n    data2[data2.length - 1][\"color\"] = \"#d02878\";\r\n\r\n    //let sd = [{ date: new Date(2018,11,24), nu: 4}, { date: new Date(2018,11,22), nu: 2}, { date: new Date(2018,11,26), nu: 3}]\r\n    //console.log(sd);\r\n\r\n    data2.sort(function (x, y) { return new Date(x['date']).getTime() - new Date(y['date']).getTime() })\r\n    let lastObject;\r\n    if (data2.length > 0) {\r\n      lastObject = data2[data2.length - 1];\r\n    }\r\n    let endDate = new Date();\r\n    endDate.setDate(lastObject[\"date\"].getDate() + parseInt(this.state.daysForward));\r\n    \r\n    for (let j = 0; j < this.state.oppositePredictedData.length; j++) {\r\n      if ((this.state.oppositePredictedData[j][\"date\"] > lastObject[\"date\"]) && this.state.oppositePredictedData[j][\"date\"] <= endDate) {\r\n          data2.push(this.state.oppositePredictedData[j])\r\n      }\r\n    }\r\n\r\n\r\n    return data2\r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className=\"chart\">\r\n          <h2>{this.state.loading ? <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div> : null}</h2>\r\n          <div className=\"subtext__container\">\r\n            {this.state.loading ?  null : <div className=\"subtext\">Parking lot demand</div>}\r\n          </div>\r\n          <div id=\"chartdiv\" style={{ height: \"500px\" }}></div>\r\n          <div className=\"subtext__container\" style={{marginTop: \"50px\", marginBottom: \"0px\"}}>\r\n            {this.state.loading ?  null : <div className=\"subtext\">Number of available spots</div>}\r\n          </div>\r\n            <Form className=\"flex\" onSubmit={this.handleSubmit} >\r\n\r\n              <FormGroup controlId=\"formBasicEmail\">\r\n                <FormControl type=\"text\" placeholder=\"Enter backwards\"  id=\"daysBackward\" onChange={this.handleChange} />\r\n\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"formBasicPassword\">\r\n                <FormControl type=\"text\" placeholder=\"Enter forwards\" id=\"daysForward\" onChange={this.handleChange}  />\r\n              </FormGroup>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Make changes\r\n              </Button>\r\n            </Form>\r\n          <div id=\"chartdiv2\" style={{ width: \"90%\", height: \"500px\" }}></div>\r\n\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  loadData = () => {\r\n    let predictedData = []\r\n    \r\n    let chart2 = am4core.create(\"chartdiv2\", am4charts.XYChart);\r\n\r\n\r\n    chart2.paddingRight = 20;\r\n\r\n    // standard stuff\r\n    let dateAxis = chart2.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = chart2.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = chart2.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"value\";\r\n\r\n    series.tooltipText = \"{valueY.value}\";\r\n\r\n\r\n    chart2.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    chart2.scrollbarX = scrollbarX;\r\n\r\n\r\n\r\n    var that = this;\r\n\r\n\r\n    // AJAX QUERY\r\n\r\n    $.ajax({\r\n      url: \"https://data.smgov.net/resource/tce2-7ir6.json\",\r\n      type: \"GET\",\r\n      data: {\r\n        \"$limit\": 100000,\r\n        \"lot_name\": \"Library\",\r\n        \"$$app_token\": \"Ul8sMHNswBDXCzvlAxpqI6x1Q\",\r\n      },\r\n      dataFilter: function (mydata) {\r\n        var pdata = JSON.parse(mydata);\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        startDate.setDate(startDate.getDate() - parseInt(that.state.daysBackward));\r\n        //var startDate = new Date(\"2019-01-01 23:00:00\");// hard coded :)\r\n        var dateLess = pdata.filter(function (r) {\r\n          //console.log(\"r\",r.date);// each date\r\n          var d = new Date(r['date_time']);\r\n\r\n          return (d.toISOString() >= startDate.toISOString() && d.toISOString() <= endDate.toISOString());\r\n        });\r\n        return JSON.stringify(dateLess);//filtered data\r\n      }\r\n\r\n    }).done(function (data) {\r\n      //alert(\"Retrieved \" + data.length + \" records from the dataset!\");\r\n      let dataProcessed2 = that.filterData(data, 1);\r\n      chart2.data = dataProcessed2;\r\n      that.chart2 = chart2;\r\n      that.setState({\r\n        loading: false,\r\n      })\r\n    })\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Charts;\r\n","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Charts from '../SubComponents/Charts';\r\n\r\nclass Statistics extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"stat-container\">\r\n            <Charts/>\r\n        </div>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    return {\r\n        \r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ }, dispatch);\r\n}\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n\r\nimport Header from './components/Main/Header';\r\nimport Home from './components/Main/Home'\r\nimport Profile from './components/Main/Profile';\r\nimport MapComponent from './components/Main/MapComponent';\r\nimport Contact from './components/Main/Contact';\r\nimport Footer from './components/Main/Footer';\r\nimport Statistics from './components/Main/Statistics';\r\n\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <React.Fragment>\r\n        <Header/>\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route path=\"/profile\" component={Profile}/>\r\n        <Route path=\"/statistics\" component={Statistics}/>\r\n        <Route path=\"/map\" component={MapComponent}/>\r\n        <Route path=\"/contact\" component={Contact}/>\r\n        <Footer/>\r\n      </React.Fragment>  \r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nimport Root from './Root';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Root store={store} />,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();"],"sourceRoot":""}